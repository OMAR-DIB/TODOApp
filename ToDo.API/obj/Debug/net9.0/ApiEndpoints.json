[
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "GetUserNotifications",
    "RelativePath": "api/Notifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "isRead",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ToDo.API.Dtos.NotificationDtos.NotificationResponseDto, ToDo.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "CreateNotification",
    "RelativePath": "api/Notifications",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.NotificationDtos.CreateNotificationRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.NotificationDtos.NotificationResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "GetNotification",
    "RelativePath": "api/Notifications/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.NotificationDtos.NotificationResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "UpdateNotification",
    "RelativePath": "api/Notifications/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.NotificationDtos.UpdateNotificationRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.NotificationDtos.NotificationResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "DeleteNotification",
    "RelativePath": "api/Notifications/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "MarkAsRead",
    "RelativePath": "api/Notifications/{id}/mark-as-read",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "MarkAllAsRead",
    "RelativePath": "api/Notifications/mark-all-as-read",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.NotificationsController",
    "Method": "GetUnreadCount",
    "RelativePath": "api/Notifications/unread-count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.SubTasksController",
    "Method": "CreateSubTask",
    "RelativePath": "api/SubTasks",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.SubTaskDtos.CreateSubTaskRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.SubTaskDtos.SubTaskResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.SubTasksController",
    "Method": "GetSubTask",
    "RelativePath": "api/SubTasks/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.SubTaskDtos.SubTaskResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.SubTasksController",
    "Method": "UpdateSubTask",
    "RelativePath": "api/SubTasks/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.SubTaskDtos.UpdateSubTaskRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.SubTaskDtos.SubTaskResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.SubTasksController",
    "Method": "DeleteSubTask",
    "RelativePath": "api/SubTasks/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.SubTasksController",
    "Method": "GetSubTasksByToDo",
    "RelativePath": "api/SubTasks/todo/{todoId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "todoId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ToDo.API.Dtos.SubTaskDtos.SubTaskResponseDto, ToDo.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.ToDosController",
    "Method": "GetAllToDos",
    "RelativePath": "api/ToDos",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ToDo.API.Dtos.ToDosDtos.ToDosResponseDto, ToDo.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.ToDosController",
    "Method": "CreateToDo",
    "RelativePath": "api/ToDos",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.ToDosDtos.CreateToDosRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.ToDosDtos.ToDosResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.ToDosController",
    "Method": "GetToDo",
    "RelativePath": "api/ToDos/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.ToDosDtos.ToDosResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.ToDosController",
    "Method": "UpdateToDo",
    "RelativePath": "api/ToDos/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.ToDosDtos.UpdateToDosRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ToDo.API.Dtos.ToDosDtos.ToDosResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.ToDosController",
    "Method": "DeleteToDo",
    "RelativePath": "api/ToDos/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.ToDosController",
    "Method": "GetToDosForDate",
    "RelativePath": "api/ToDos/date/{date}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "date",
        "Type": "System.DateOnly",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ToDo.API.Dtos.ToDosDtos.ToDosResponseDto, ToDo.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.ToDosController",
    "Method": "GetToDosByStatus",
    "RelativePath": "api/ToDos/status/{status}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ToDo.API.Dtos.ToDosDtos.ToDosResponseDto, ToDo.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ToDo.API.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.UserDtos.Login.LoginRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.UserDtos.CreateUserRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.UserController",
    "Method": "ResendVerification",
    "RelativePath": "api/User/resend-verification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.UserDtos.ResendVerificationRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ToDo.API.Controllers.UserController",
    "Method": "VerifyEmail",
    "RelativePath": "api/User/verify-email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ToDo.API.Dtos.UserDtos.VerifyEmailRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]